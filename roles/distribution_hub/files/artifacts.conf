server {
    listen 443 ssl ;
    listen [::]:443 ssl ;
    server_name artifacts.backbone;

    # TODO certbot
    # ssl on;
    # ssl_certificate /etc/ssl/certs/backbone.ca-bundle.crt;
    # ssl_certificate_key /etc/ssl/private/backbone.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    client_max_body_size    5000m;

    location / {
        proxy_pass http://127.0.0.1:8082/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme "https";   # $scheme;
        proxy_set_header X-Forwarded-Proto "https";
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
    }
}

server {
    listen 443 ssl;
    server_name docker.backbone;

    # TODO certbot
    # ssl on;
    # ssl_certificate /etc/ssl/certs/backbone.ca-bundle.crt;
    # ssl_certificate_key /etc/ssl/private/backbone.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    client_max_body_size    5000m;

    location / {
        proxy_pass http://127.0.0.1:8085/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme "https";   # $scheme;
        proxy_set_header X-Forwarded-Proto "https";
        proxy_set_header Host $http_host;
        proxy_set_header Upgrade $http_upgrade;
    }
}
